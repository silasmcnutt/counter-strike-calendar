/// <reference types="node" />
import { Agent as HttpAgent, AgentOptions, ClientRequest, ClientRequestArgs } from 'http';
/**
 * @see https://github.com/nodejs/node/blob/533cafcf7e3ab72e98a2478bc69aedfdf06d3a5e/lib/_http_client.js#L129-L162
 * @see https://github.com/nodejs/node/blob/533cafcf7e3ab72e98a2478bc69aedfdf06d3a5e/lib/_http_client.js#L234-L246
 * @see https://github.com/nodejs/node/blob/533cafcf7e3ab72e98a2478bc69aedfdf06d3a5e/lib/_http_client.js#L304-L305
 * Wraps an existing Agent instance,
 * so there's no need to replace `agent.addRequest`.
 */
export declare class WrappedAgent<T extends HttpAgent> implements HttpAgent {
    agent: T;
    constructor(agent: T);
    addRequest(request: ClientRequest, options: ClientRequestArgs): void;
    get keepAlive(): boolean;
    get maxSockets(): HttpAgent['maxSockets'];
    get options(): AgentOptions;
    get defaultPort(): number;
    get protocol(): string;
    destroy(): void;
    get maxFreeSockets(): HttpAgent['maxFreeSockets'];
    get maxTotalSockets(): HttpAgent['maxTotalSockets'];
    get freeSockets(): HttpAgent['freeSockets'];
    get sockets(): HttpAgent['sockets'];
    get requests(): HttpAgent['requests'];
    on(eventName: string | symbol, listener: (...args: any[]) => void): this;
    once(eventName: string | symbol, listener: (...args: any[]) => void): this;
    off(eventName: string | symbol, listener: (...args: any[]) => void): this;
    addListener(eventName: string | symbol, listener: (...args: any[]) => void): this;
    removeListener(eventName: string | symbol, listener: (...args: any[]) => void): this;
    removeAllListeners(eventName?: string | symbol): this;
    setMaxListeners(n: number): this;
    getMaxListeners(): number;
    listeners(eventName: string | symbol): Function[];
    rawListeners(eventName: string | symbol): Function[];
    emit(eventName: string | symbol, ...args: any[]): boolean;
    eventNames(): (string | symbol)[];
    listenerCount(eventName: string | symbol): number;
    prependListener(eventName: string | symbol, listener: (...args: any[]) => void): this;
    prependOnceListener(eventName: string | symbol, listener: (...args: any[]) => void): this;
}
//# sourceMappingURL=wrapped-agent.d.ts.map